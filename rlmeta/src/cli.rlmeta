Cli {
  run =
    | "Args"         !.   -> put(["Args" "--compile" "-"])
    | "Args" arg*:xs !.   -> Counter():next
                          -> xs
                          -> spawn(PartCollector(0 sub(next() 1) []))
  arg =
    | "--support"         -> put(["Part"       next() SUPPORT])
    | "--copy"    .:x     -> put(["Part"       next() read(x)])
    | "--embed"   .:x .:y -> put(["Part"       next() {x " = " repr(read(y)) "\n"}])
    | "--compile" .:x     -> put(["SourceCode" next() read(x)])
}

PartCollector #n #last #parts {
  run =
    | next #last .:x !. -> put(["Write" {parts x}])
    | next .     .:x !. -> spawn(PartCollector(add(n 1) last add(parts [x])))
  next = "Part" !(!(#n))
}

StdoutWriter {
  run = "Write" .:x !. -> write(x)
}
