actor CLI =
    "Args" .:input !. -> put(["File" read(input)])

actor Parser =
    "File" [sequence:x] !. -> put(x)
    where
        sequence  = step:x (',' step)*:xs !. -> ["Sequence" x ~xs]
        step      = char*:xs                 -> [~~xs]
        char      = !',' ('\n' -> [] | .:x   -> [x])
    examples
        ["File" "rn=1,cm-"] -> [
            ["Sequence"
                ["r" "n" "=" "1"]
                ["c" "m" "-"]
            ]
        ]
        ["File" "ot=7\n"] -> [
            ["Sequence"
                ["o" "t" "=" "7"]
            ]
        ]

actor Hasher =
    "Sequence" hash*:xs !. -> put(["Result" sum(xs)])
    where
        hash = [.*:xs] -> hashAlgorithm(xs)
    examples
        ["Sequence" ["H"]] -> [["Result" 200]]
        ["Sequence" ["H" "A" "S" "H"]] -> [["Result" 52]]
        ["Sequence" ["o" "t" "=" "7"]] -> [["Result" 231]]
        ["Sequence" ["r" "n"]] -> [["Result" 0]]

def hashAlgorithm characters =
    result = 0
    for character in characters:
        result += ord(character)
        result *= 17
        result = result % 256
    return result

actor InstructionParser =
    "Sequence" operation*:xs !. -> put(["Operations" ~xs])
    where
        operation = [label:x action:y !.] -> [x y]
        label     = char:x char*:xs       -> [x ~xs]
        char      = !('=' | '-') .
        action =
            | '=' number:x -> ["set" x]
            | '-'          -> ["remove"]
        number    = digit:x digit*:xs     -> int({x xs})
        digit     = '0'-'9'
    examples
        ["Sequence"
            ["r" "n" "=" "1"]
            ["c" "m" "-"]
        ] -> [["Operations"
            [["r" "n"] ["set" 1]]
            [["c" "m"] ["remove"]]
        ]]

actor InstructionRunner =
    "Operations" operation*:xs !.
        -> dict():boxes
        -> xs
        -> put(["Boxes" boxes])
    where
        operation = [[.*:label] action:y !.]
            -> hashAlgorithm(label):boxId
            -> { label }:label
            -> y
        action =
            | ["set" .:value] -> boxSet(boxes boxId label value)
            | ["remove"]      -> boxRemove(boxes boxId label)
    examples
        ["Operations"
            [["r" "n"] ["set" 1]]
            [["c" "m"] ["remove"]]
        ] -> [["Boxes" dict([
            [0 [["rn" 1]]]
        ])]]

def boxSet boxes boxId label value =
    if boxId in boxes:
        boxes[boxId] = [
            x if x[0] != label else [label, value]
            for x in boxes[boxId]
        ]
    else:
        boxes[boxId] = [[label, value]]

def boxRemove boxes boxId label =
    if boxId in boxes:
        boxes[boxId] = [
            x
            for x in boxes[boxId]
            if x[0] != label
        ]

universe Part1 =
    CLI()
    Parser()
    Hasher()
    examples
        ["Args" "example.txt"] -> [["Result" 1320]]
        ["Args" "input.txt"] -> [["Result" 518107]]
