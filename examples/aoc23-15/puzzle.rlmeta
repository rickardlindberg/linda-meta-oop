actor CLI =
    "Args" .:input !. -> put(["File" read(input)])

actor Parser =
    "File" [sequence:x] !. -> put(x)
    where
        sequence  = step:x (',' step)*:xs !. -> ["Sequence" x ~xs]
        step      = char*:xs                 -> [~~xs]
        char      = !',' ('\n' -> [] | .:x   -> [x])
    examples
        ["File" "rn=1,cm-"] -> [
            ["Sequence"
                ["r" "n" "=" "1"]
                ["c" "m" "-"]
            ]
        ]
        ["File" "ot=7\n"] -> [
            ["Sequence"
                ["o" "t" "=" "7"]
            ]
        ]

actor Hasher =
    "Sequence" hash*:xs !. -> put(["Result" sum(xs)])
    where
        hash = [.*:xs] -> hashAlgorithm(xs)
    examples
        ["Sequence" ["H"]] -> [["Result" 200]]
        ["Sequence" ["H" "A" "S" "H"]] -> [["Result" 52]]
        ["Sequence" ["o" "t" "=" "7"]] -> [["Result" 231]]

def hashAlgorithm characters =
    result = 0
    for character in characters:
        result += ord(character)
        result *= 17
        result = result % 256
    return result

universe Part1 =
    CLI()
    Parser()
    Hasher()
    examples
        ["Args" "example.txt"] -> [["Result" 1320]]
        ["Args" "input.txt"] -> [["Result" 518107]]
