actor CLI =
    "Args" .:input !. -> put(["File" read(input)])

actor Parser =
    "File" [sequence:x] !. -> put(x)
    where
        sequence  = step:x (',' step)*:xs -> ["Sequence" x ~xs]
        step      = (!',' .)*:xs          -> xs
    examples
        ["File" "rn=1,cm-"] -> [
            ["Sequence"
                ["r" "n" "=" "1"]
                ["c" "m" "-"]
            ]
        ]

actor Hasher =
    "Sequence" hash*:xs !. -> put(["Result" sum(xs)])
    where
        hash = [.*:xs] -> hashAlgorithm(xs)
    examples
        ["Sequence" ["H"]] -> [["Result" 200]]

def hashAlgorithm characters =
    result = 0
    for character in characters:
        result += ord(character)
        result *= 17
        result = result % 256
    return result

universe Part1 =
    CLI()
    Parser()
