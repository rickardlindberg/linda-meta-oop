actor CLI =
    run     = "Args" .:input !.        -> put(["File" read(input)])

actor Parser =
    run     = "File" [entries:x] !.    -> put(x)
    entries = entry*:xs !.             -> ["Entries" ~xs]
    entry   = ^number*:xs ^'\n'        -> ["Entry" ~xs]
    number  = sign:x digit:y digit*:ys -> int({x y ys})
    sign    = '-' | -> ""
    digit   = '0'-'9'
    space   = ' '*

actor ForwardExtrapolator =
    run         = "Entries" extrapolate*:xs !. -> put(["Extrapolated" ~xs])
    extrapolate = ["Entry" .*:xs !.]           -> extrapolateForward(xs)

def extrapolateForward(numbers):
    if sum(numbers) == 0:
        return 0
    else:
        next = []
        previous = numbers[0]
        for number in numbers[1:]:
            next.append(number - previous)
            previous = number
        return numbers[-1] + extrapolateForward(next)

actor BackwardsExtrapolator =
    run         = "Entries" extrapolate*:xs !. -> put(["Extrapolated" ~xs])
    extrapolate = ["Entry" .*:xs !.]           -> extrapolateBackwards(xs)

def extrapolateBackwards(numbers):
    if sum(numbers) == 0:
        return 0
    else:
        next = []
        previous = numbers[0]
        for number in numbers[1:]:
            next.append(number - previous)
            previous = number
        return numbers[0] - extrapolateBackwards(next)

actor Summer =
    run = "Extrapolated" .*:xs !. -> put(["Result" sum(xs)])
